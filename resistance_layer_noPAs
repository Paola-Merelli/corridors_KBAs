library(sf)
library(rgdal)
library(raster)
library(dplyr)
library(tidyverse)
library(terra)
library(ggplot2)
library(scales)
#setwd("/media/r_projects/paola.merelli2/assegno_prin")

############################################################# AOH layer #############################################################

AOH_birds_ita <- rast("prova_ita_iba/AOH_birds_ita.tif")
crs(AOH_birds_ita) <- "EPSG:3035"
print(AOH_birds_ita) #res AOH_birds_ita 92.78040 92.77625

AOH_birds_ita_new <- rast(AOH_birds_ita)
res(AOH_birds_ita_new) <- c(100, 100)  # Impostare la nuova risoluzione
ext(AOH_birds_ita_new) <- ext(AOH_birds_ita)
resistance_AOH_birds_ita <- resample(AOH_birds_ita, AOH_birds_ita_new, method = "bilinear")  

min_AOH <- min(values(resistance_AOH_birds_ita), na.rm = TRUE)  
max_AOH <- max(values(resistance_AOH_birds_ita), na.rm = TRUE)  
min_scale2 <- 0
max_scale2 <- 200

# Funzione per riscalare AOH in resistenza
transform_AOH <- function(AOH, min_AOH, max_AOH, min_resist, max_resist) {
  return(((max_AOH - AOH) / (max_AOH - min_AOH)) * (max_resist - min_resist) + min_resist)
}

# Applica la funzione per trasformare i valori di AOH in resistenza inversa
resistance_AOH_birds_ita$resistance <- transform_AOH(values(resistance_AOH_birds_ita), 
                                                     min_AOH, max_AOH, 
                                                     min_scale2, max_scale2)

print(resistance_AOH_birds_ita)
resistance_AOH_birds_ita <- resistance_AOH_birds_ita[["resistance"]]

resistance_AOH_birds_ita <- resample(resistance_AOH_birds_ita, resistance_pa_ita)


# Visualizzazione con ggplot2
resistance_AOH_birds_df_ita <- as.data.frame(resistance_AOH_birds_ita, xy = TRUE)

res_AOH <- ggplot() +
  geom_tile(data = resistance_AOH_birds_df_ita, aes(x = x, y = y, fill = resistance)) +
  scale_fill_viridis_c(alpha = 1, begin = 0, end = 1) +
  theme_minimal() +
  labs(title = "AOH_birds", fill = "Resistance") +
  coord_sf(crs = st_crs(3035), expand = FALSE) +
  theme(axis.title.x = element_blank(), axis.title.y = element_blank())

#ggsave("prova_ita_iba/produced_layers/res_AOH.png", plot = res_AOH)
#writeRaster(resistance_AOH_birds_ita, "prova_ita_iba/produced_layers/resistance_AOH_birds_ita.tiff", overwrite = T)


############################################################# distance layer #################################################################

ita_pa <- rbind(iba_ita, np_ita, oth_pa_ita)
crs(ita_pa) <- "EPSG:3035"

ita_raster <- rasterize(ita, r2, field = 1)
crs(ita_raster) <- "EPSG:3035"
ita_pa_raster <- rasterize(ita_pa, r2, field = 1)
crs(ita_pa_raster) <- "EPSG:3035"

resistance_d_pa_ita <- distance(ita_pa_raster, unit = "km")
resistance_d_pa_ita <- mask(resistance_d_pa_ita, ita_raster)
crs(resistance_dpa_ita) <- "EPSG:3035"
print(resistance_d_pa_ita)


# Define the min and max values for the distance and resistance scales
min_d <- min(values(resistance_d_pa_ita), na.rm = TRUE)  # Assuming min distance is 0
max_d <- max(values(resistance_d_pa_ita), na.rm = TRUE)  # Max distance from your data
min_scale2 <- 0
max_scale2 <- 200

# Function to transform distance to resistance
transform_distance <- function(distance, min_dist, max_dist, min_resist, max_resist) {
  return(((distance - min_dist) / (max_dist - min_dist)) * (max_resist - min_resist) + min_resist)
}

# Apply the transformation to create the resistance layer
resistance_d_pa_ita$resistance <- transform_distance(values(resistance_d_pa_ita), 
                                                      min_d, max_d, 
                                                      min_scale2, max_scale2)

print(resistance_d_pa_ita)
resistance_d_pa_ita <- resistance_d_pa_ita[["resistance"]]

# Visualizzazione con ggplot2
resistance_d_pa_df_ita <- as.data.frame(resistance_d_pa_ita, xy = TRUE)

res_d_pa <- ggplot() +
  geom_tile(data = resistance_d_pa_df_ita, aes(x = x, y = y, fill = resistance)) +
  scale_fill_viridis_c(alpha = 1, begin = 0, end = 1) +  
  geom_sf(data = st_as_sf(ita_pa), color = "black", fill = "white", size = 0.5) +  # Linee delle aree protette
  theme_minimal() +
  labs(title = "Distance from Protected Areas (Italy)", fill = "Resistance") +
  coord_sf(crs = st_crs(3035), expand = FALSE) +
  theme(axis.title.x = element_blank(), axis.title.y = element_blank())

#ggsave("prova_ita_iba/produced_layers/res_d_pa.png", plot = res_d_pa)
#writeRaster(resistance_d_pa_ita, "prova_ita_iba/produced_layers/resistance_d_pa_ita.tiff", overwrite = T)
#writeRaster(ita_raster, "prova_ita_iba/produced_layers/ita_rast.tiff", overwrite = T)

#####################################################################################
#resistance_d_pa_ita <- rast("prova_ita_iba/produced_layers/resistance_d_pa_ita.tiff")
#resistance_AOH_birds_ita <- rast("prova_ita_iba/produced_layers/resistance_AOH_birds_ita.tiff")

final_resistance_ita_nopa <- resistance_AOH_birds_ita + resistance_d_pa_ita

if (is.null(resistance_AOH_birds_ita) || !inherits(resistance_lc_ita, "SpatRaster")) {
  stop("Error: resistance_lc_ita is either NULL or not a valid SpatRaster object.")
}
if (is.null(resistance_d_pa_ita) || !inherits(resistance_d_pa_ita, "SpatRaster")) {
  stop("Error: resistance_d_pa_ita is either NULL or not a valid SpatRaster object.")
}

final_resistance_ita_nopa_df <- as.data.frame(final_resistance_ita_nopa, xy = T)


res_final_nopa <- ggplot() +
  geom_tile(data = final_resistance_ita_nopa_df, aes(x = x, y = y, fill = resistance)) +
  scale_fill_viridis_c(alpha = 1, begin = 0, end = 1, direction = -1) +  # Scala di colori per la distanza
  geom_sf(data = st_as_sf(np_ita), color = "black", fill = "yellow", size = 0.5) +  # Linee delle aree protette
  theme_minimal() +
  labs(title = "Resistance layer (Italy)", fill = "Resistance") +
  coord_sf() +
  theme(axis.title.x = element_blank(), axis.title.y = element_blank())

#writeRaster(final_resistance_ita_nopa, "prova_ita_iba/produced_layers/final_resistance_ita_nopa.tiff", overwrite = T)
#ggsave("prova_ita_iba/produced_layers/res_final_nopa.png", plot = res_final_nopa, width = 4.34, height = 3.77)
